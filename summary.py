#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Thu Dec  9 16:37:53 2010

"""Provide GUIs for displaying summary statistical information"""


import wx
import sys
# begin wxGlade: extracode
# end wxGlade


class NumSummary(wx.Frame):
    def __init__(self, parent, fieldnames):
        # begin wxGlade: NumSummary.__init__
        wx.Frame.__init__(self, None, -1)
        self.mainpanel = wx.Panel(self, -1)
        self.resultpanel = wx.Panel(self.mainpanel, -1)
        self.querypanel = wx.Panel(self.mainpanel, -1)
        self.querybox = wx.ComboBox(self.querypanel, -1, choices=fieldnames, style=wx.CB_DROPDOWN)
        self.minlabel = wx.StaticText(self.resultpanel, -1, "Minimum")
        self.minctrl = wx.TextCtrl(self.resultpanel, -1, "", style=wx.TE_READONLY)
        self.maxlabel = wx.StaticText(self.resultpanel, -1, "Maximum")
        self.maxctrl = wx.TextCtrl(self.resultpanel, -1, "", style=wx.TE_READONLY)
        self.meanlabel = wx.StaticText(self.resultpanel, -1, "Mean")
        self.meanctrl = wx.TextCtrl(self.resultpanel, -1, "", style=wx.TE_READONLY)
        self.stdlabel = wx.StaticText(self.resultpanel, -1, "Std deviation")
        self.stdctrl = wx.TextCtrl(self.resultpanel, -1, "", style=wx.TE_READONLY)
        self.totallabel = wx.StaticText(self.resultpanel, -1, "Total values")
        self.totalctrl = wx.TextCtrl(self.resultpanel, -1, "", style=wx.TE_READONLY)
        self.missinglabel = wx.StaticText(self.resultpanel, -1, "Missing Values")
        self.missingctrl = wx.TextCtrl(self.resultpanel, -1, "", style=wx.TE_READONLY)
        
        self.__set_properties()
        self.__do_layout()
        # end wxGlade
        self.parent = parent
        self.querybox.Bind(wx.EVT_TEXT_ENTER, self.on_new_query)
        
    def __set_properties(self):
        # begin wxGlade: NumSummary.__set_properties
        self.SetTitle("Numerical Summary")
        self.querybox.SetFocus()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: NumSummary.__do_layout
        mainsizer = wx.BoxSizer(wx.VERTICAL)
        mainpanelsizer = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.FlexGridSizer(6, 2, 2, 2)
        querypanelsizer = wx.BoxSizer(wx.HORIZONTAL)
        querypanelsizer.Add(self.querybox, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 10)
        self.querypanel.SetSizer(querypanelsizer)
        mainpanelsizer.Add(self.querypanel, 1, wx.ALL|wx.EXPAND, 5)
        grid_sizer_1.Add(self.minlabel, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.minctrl, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.maxlabel, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.maxctrl, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.meanlabel, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.meanctrl, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.stdlabel, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.stdctrl, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.totallabel, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.totalctrl, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.missinglabel, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.missingctrl, 0, wx.EXPAND, 0)
        self.resultpanel.SetSizer(grid_sizer_1)
        grid_sizer_1.AddGrowableCol(1)
        mainpanelsizer.Add(self.resultpanel, 4, wx.ALL|wx.EXPAND, 5)
        self.mainpanel.SetSizer(mainpanelsizer)
        mainsizer.Add(self.mainpanel, 1, wx.EXPAND, 0)
        self.SetSizer(mainsizer)
        mainsizer.Fit(self)
        self.Layout()
        # end wxGlade

# end of class NumSummary

    def on_new_query(self, event):
        """when new fieldname is chosen"""
        fieldname = self.without_parentheses(event.GetString())
        mean, stdev, minimum, maximum, total_vals, missing_vals = self.parent.summarize_numerical(
            fieldname)

        self.meanctrl.SetValue(str(mean))
        self.stdctrl.SetValue(str(stdev))
        self.minctrl.SetValue(str(minimum))
        self.maxctrl.SetValue(str(maximum))
        self.totalctrl.SetValue(str(total_vals))
        self.missingctrl.SetValue(str(missing_vals))
                

    def without_parentheses(self, label_str):
        """Remove terminal text within parentheses
        >>> without_parentheses(self, "test(within)")
            "test"
        """
        opening_brace_pos = label_str.find('(')

        if opening_brace_pos == -1:
            return label_str
        
        return label_str[:opening_brace_pos].strip()


class CatSummary(wx.Frame):
    def __init__(self, parent, fieldnames):
        # begin wxGlade: NumSummary.__init__
        wx.Frame.__init__(self, None, -1)
        self.mainpanel = wx.Panel(self, -1)
        self.resultpanel = wx.Panel(self.mainpanel, -1)
        self.querypanel = wx.Panel(self.mainpanel, -1)

        self.querybox = wx.ComboBox(self.querypanel, -1, choices=fieldnames, style=wx.CB_DROPDOWN)
        self.resultctrl = wx.ListCtrl(self.resultpanel, -1, style=wx.LC_REPORT)
        
        self.__set_properties()
        self.__do_layout()
        # end wxGlade
        self.parent = parent
        self.querybox.Bind(wx.EVT_TEXT_ENTER, self.on_new_query)
        
    def __set_properties(self):
        # begin wxGlade: NumSummary.__set_properties
        self.SetTitle("Categorical Summary")
        self.querybox.SetFocus()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: NumSummary.__do_layout
        mainsizer = wx.BoxSizer(wx.VERTICAL)
        mainpanelsizer = wx.BoxSizer(wx.VERTICAL)
        #grid_sizer_1 = wx.FlexGridSizer(6, 2, 2, 2)
        querypanelsizer = wx.BoxSizer(wx.HORIZONTAL)
        resultpanelsizer = wx.BoxSizer(wx.HORIZONTAL)
        
        querypanelsizer.Add(self.querybox, 0,
                            wx.ALL|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 10)
        self.querypanel.SetSizer(querypanelsizer)
        resultpanelsizer.Add(self.resultctrl, 1, wx.ALL|wx.EXPAND, 5)
        self.resultpanel.SetSizer(resultpanelsizer)

        mainpanelsizer.Add(self.querypanel, 1, wx.ALL|wx.EXPAND, 5)
        mainpanelsizer.Add(self.resultpanel, 4, wx.ALL|wx.EXPAND, 5)
        self.mainpanel.SetSizer(mainpanelsizer)
        mainsizer.Add(self.mainpanel, 1, wx.EXPAND, 0)
        self.SetSizer(mainsizer)
        mainsizer.Fit(self)
        self.Layout()
        # end wxGlade
        
        self.resultctrl.InsertColumn(0, 'Label', width=200)
        self.resultctrl.InsertColumn(1, 'Counts', wx.LIST_FORMAT_RIGHT, 60)
                
# end of class NumSummary

    def on_new_query(self, event):
        """when new fieldname is chosen"""
        fieldname = self.without_parentheses(event.GetString())

        results = self.parent.summarize_categorical(fieldname)

        self.resultctrl.DeleteAllItems()
        for res in results:
            index = self.resultctrl.InsertStringItem(sys.maxint, res[0])
            self.resultctrl.SetStringItem(index, 1, res[1])
            
                
    def without_parentheses(self, label_str):
        """Remove terminal text within parentheses
        >>> without_parentheses(self, "test(within)")
            "test"
        """
        opening_brace_pos = label_str.find('(')

        if opening_brace_pos == -1:
            return label_str
        
        return label_str[:opening_brace_pos].strip()



if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    n = CatSummary(None, ['yes', 'no'])
    app.SetTopWindow(n)
    n.Show()
    app.MainLoop()
